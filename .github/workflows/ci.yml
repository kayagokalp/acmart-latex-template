name: LaTeX Build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
  create:
    tags: ['*']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read LaTeX Packages from File
        id: packages
        run: |
          PACKAGES=$(tr '\n' ' ' < latex-packages)
          echo "packages=$PACKAGES" >> $GITHUB_ENV

      - name: Setup TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: ${{ env.packages }}

      - name: Cache TeX Live Packages
        uses: actions/cache@v3
        with:
          path: /usr/local/texlive/2024
          key: texlive-2024-${{ runner.os }}-${{ hashFiles('**/build.sh') }}
          restore-keys: |
            texlive-2024-${{ runner.os }}-

      - name: Run LaTeX Build Script
        run: ./build.sh

      - name: Upload PDF Output
        id: artifact-upload-step
        uses: actions/upload-artifact@v4
        with:
          name: pdf-output
          path: out/*.pdf

      - name: Output Artifact URL
        run: echo "Artifact URL is ${{ steps.artifact-upload-step.outputs.artifact-url }}"

      - name: Post Temporary Link in PR
        if: github.event_name == 'pull_request' && success()
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            PDF for this PR commit is available [here](${{ steps.artifact-upload-step.outputs.artifact-url }}).

  publish:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read LaTeX Packages from File
        id: packages
        run: |
          PACKAGES=$(tr '\n' ' ' < latex-packages)
          echo "packages=$PACKAGES" >> $GITHUB_ENV

      - name: Setup TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: ${{ env.packages }}

      - name: Cache TeX Live Packages
        uses: actions/cache@v3
        with:
          path: /usr/local/texlive/2024
          key: texlive-2024-${{ runner.os }}-${{ hashFiles('**/build.sh') }}
          restore-keys: |
            texlive-2024-${{ runner.os }}-

      - name: Run LaTeX Build Script
        run: ./build.sh

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Upload to gh-pages
        run: |
          git checkout --orphan gh-pages
          git rm -rf .
          cp out/*.pdf latest.pdf
          git add latest.pdf
          git commit -m "Update latest PDF for master"
          git push -f origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tag-publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read LaTeX Packages from File
        id: packages
        run: |
          PACKAGES=$(tr '\n' ' ' < latex-packages)
          echo "packages=$PACKAGES" >> $GITHUB_ENV

      - name: Setup TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: ${{ env.packages }}

      - name: Cache TeX Live Packages
        uses: actions/cache@v3
        with:
          path: /usr/local/texlive/2024
          key: texlive-2024-${{ runner.os }}-${{ hashFiles('**/build.sh') }}
          restore-keys: |
            texlive-2024-${{ runner.os }}-

      - name: Run LaTeX Build Script
        run: ./build.sh

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Upload Tagged PDF to gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          git checkout gh-pages || git checkout --orphan gh-pages
          git pull origin gh-pages
          cp out/*.pdf "$TAG_NAME.pdf"
          git add "$TAG_NAME.pdf"
          git commit -m "Add PDF for tag $TAG_NAME"
          git push origin gh-pages
